{
  "generated": [
    "app"
  ],
  "modules": {
    "permissionManagement": {
      "rootPath": "permissionManagement",
      "remoteServiceName": "AbpPermissionManagement",
      "controllers": {
        "Volo.Abp.PermissionManagement.PermissionsController": {
          "controllerName": "Permissions",
          "type": "Volo.Abp.PermissionManagement.PermissionsController",
          "interfaces": [
            {
              "type": "Volo.Abp.PermissionManagement.IPermissionAppService"
            }
          ],
          "actions": {
            "GetAsyncByProviderNameAndProviderKey": {
              "uniqueName": "GetAsyncByProviderNameAndProviderKey",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/permission-management/permissions",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.PermissionManagement.GetPermissionListResultDto",
                "typeSimple": "Volo.Abp.PermissionManagement.GetPermissionListResultDto"
              }
            },
            "UpdateAsyncByProviderNameAndProviderKeyAndInput": {
              "uniqueName": "UpdateAsyncByProviderNameAndProviderKeyAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/permission-management/permissions",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.PermissionManagement.UpdatePermissionsDto, Volo.Abp.PermissionManagement.Application.Contracts",
                  "type": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "typeSimple": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "typeSimple": "Volo.Abp.PermissionManagement.UpdatePermissionsDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        }
      }
    },
    "app": {
      "rootPath": "app",
      "remoteServiceName": "Default",
      "controllers": {
        "Nikia.TelegramBotManager.TelegramBot.TelegramService": {
          "controllerName": "Telegram",
          "type": "Nikia.TelegramBotManager.TelegramBot.TelegramService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Nikia.TelegramBotManager.TelegramBot.IReportService"
            }
          ],
          "actions": {
            "GetInitTelegramService": {
              "uniqueName": "GetInitTelegramService",
              "name": "GetInitTelegramService",
              "httpMethod": "GET",
              "url": "api/app/telegram/init-telegram-service",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.String",
                "typeSimple": "string"
              }
            },
            "Service1ByUpdate": {
              "uniqueName": "Service1ByUpdate",
              "name": "Service1",
              "httpMethod": "POST",
              "url": "api/app/telegram/service1",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "update",
                  "typeAsString": "Telegram.Bot.Types.Update, Telegram.Bot",
                  "type": "Telegram.Bot.Types.Update",
                  "typeSimple": "Telegram.Bot.Types.Update",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "update",
                  "name": "update",
                  "type": "Telegram.Bot.Types.Update",
                  "typeSimple": "Telegram.Bot.Types.Update",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "Service2ByUpdate": {
              "uniqueName": "Service2ByUpdate",
              "name": "Service2",
              "httpMethod": "POST",
              "url": "api/app/telegram/service2",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "update",
                  "typeAsString": "Telegram.Bot.Types.Update, Telegram.Bot",
                  "type": "Telegram.Bot.Types.Update",
                  "typeSimple": "Telegram.Bot.Types.Update",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "update",
                  "name": "update",
                  "type": "Telegram.Bot.Types.Update",
                  "typeSimple": "Telegram.Bot.Types.Update",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "Service3ByUpdate": {
              "uniqueName": "Service3ByUpdate",
              "name": "Service3",
              "httpMethod": "POST",
              "url": "api/app/telegram/service3",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "update",
                  "typeAsString": "Telegram.Bot.Types.Update, Telegram.Bot",
                  "type": "Telegram.Bot.Types.Update",
                  "typeSimple": "Telegram.Bot.Types.Update",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "update",
                  "name": "update",
                  "type": "Telegram.Bot.Types.Update",
                  "typeSimple": "Telegram.Bot.Types.Update",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "Service4ByUpdate": {
              "uniqueName": "Service4ByUpdate",
              "name": "Service4",
              "httpMethod": "POST",
              "url": "api/app/telegram/service4",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "update",
                  "typeAsString": "Telegram.Bot.Types.Update, Telegram.Bot",
                  "type": "Telegram.Bot.Types.Update",
                  "typeSimple": "Telegram.Bot.Types.Update",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "update",
                  "name": "update",
                  "type": "Telegram.Bot.Types.Update",
                  "typeSimple": "Telegram.Bot.Types.Update",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "Service5ByUpdate": {
              "uniqueName": "Service5ByUpdate",
              "name": "Service5",
              "httpMethod": "POST",
              "url": "api/app/telegram/service5",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "update",
                  "typeAsString": "Telegram.Bot.Types.Update, Telegram.Bot",
                  "type": "Telegram.Bot.Types.Update",
                  "typeSimple": "Telegram.Bot.Types.Update",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "update",
                  "name": "update",
                  "type": "Telegram.Bot.Types.Update",
                  "typeSimple": "Telegram.Bot.Types.Update",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "Service6ByUpdate": {
              "uniqueName": "Service6ByUpdate",
              "name": "Service6",
              "httpMethod": "POST",
              "url": "api/app/telegram/service6",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "update",
                  "typeAsString": "Telegram.Bot.Types.Update, Telegram.Bot",
                  "type": "Telegram.Bot.Types.Update",
                  "typeSimple": "Telegram.Bot.Types.Update",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "update",
                  "name": "update",
                  "type": "Telegram.Bot.Types.Update",
                  "typeSimple": "Telegram.Bot.Types.Update",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "Service7ByUpdate": {
              "uniqueName": "Service7ByUpdate",
              "name": "Service7",
              "httpMethod": "POST",
              "url": "api/app/telegram/service7",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "update",
                  "typeAsString": "Telegram.Bot.Types.Update, Telegram.Bot",
                  "type": "Telegram.Bot.Types.Update",
                  "typeSimple": "Telegram.Bot.Types.Update",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "update",
                  "name": "update",
                  "type": "Telegram.Bot.Types.Update",
                  "typeSimple": "Telegram.Bot.Types.Update",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "Service8ByUpdate": {
              "uniqueName": "Service8ByUpdate",
              "name": "Service8",
              "httpMethod": "POST",
              "url": "api/app/telegram/service8",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "update",
                  "typeAsString": "Telegram.Bot.Types.Update, Telegram.Bot",
                  "type": "Telegram.Bot.Types.Update",
                  "typeSimple": "Telegram.Bot.Types.Update",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "update",
                  "name": "update",
                  "type": "Telegram.Bot.Types.Update",
                  "typeSimple": "Telegram.Bot.Types.Update",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "Service9ByUpdate": {
              "uniqueName": "Service9ByUpdate",
              "name": "Service9",
              "httpMethod": "POST",
              "url": "api/app/telegram/service9",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "update",
                  "typeAsString": "Telegram.Bot.Types.Update, Telegram.Bot",
                  "type": "Telegram.Bot.Types.Update",
                  "typeSimple": "Telegram.Bot.Types.Update",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "update",
                  "name": "update",
                  "type": "Telegram.Bot.Types.Update",
                  "typeSimple": "Telegram.Bot.Types.Update",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "Nikia.TelegramBotManager.BotManager.BotService": {
          "controllerName": "Bot",
          "type": "Nikia.TelegramBotManager.BotManager.BotService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Nikia.TelegramBotManager.BotManager.IBotService"
            }
          ],
          "actions": {
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/bot",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Nikia.TelegramBotManager.BotManager.BotDto, Nikia.TelegramBotManager.Application.Contracts",
                  "type": "Nikia.TelegramBotManager.BotManager.BotDto",
                  "typeSimple": "Nikia.TelegramBotManager.BotManager.BotDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Nikia.TelegramBotManager.BotManager.BotDto",
                  "typeSimple": "Nikia.TelegramBotManager.BotManager.BotDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Nikia.TelegramBotManager.BotManager.BotDto",
                "typeSimple": "Nikia.TelegramBotManager.BotManager.BotDto"
              }
            },
            "AssignServicePathByInput": {
              "uniqueName": "AssignServicePathByInput",
              "name": "AssignServicePath",
              "httpMethod": "POST",
              "url": "api/app/bot/assign-service-path",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Nikia.TelegramBotManager.BotManager.BotDto, Nikia.TelegramBotManager.Application.Contracts",
                  "type": "Nikia.TelegramBotManager.BotManager.BotDto",
                  "typeSimple": "Nikia.TelegramBotManager.BotManager.BotDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Nikia.TelegramBotManager.BotManager.BotDto",
                  "typeSimple": "Nikia.TelegramBotManager.BotManager.BotDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/bot/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Nikia.TelegramBotManager.BotManager.BotDto, Nikia.TelegramBotManager.Application.Contracts",
                  "type": "Nikia.TelegramBotManager.BotManager.BotDto",
                  "typeSimple": "Nikia.TelegramBotManager.BotManager.BotDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Nikia.TelegramBotManager.BotManager.BotDto",
                  "typeSimple": "Nikia.TelegramBotManager.BotManager.BotDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Nikia.TelegramBotManager.BotManager.BotDto",
                "typeSimple": "Nikia.TelegramBotManager.BotManager.BotDto"
              }
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/bot/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/bot/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Nikia.TelegramBotManager.BotManager.BotDto",
                "typeSimple": "Nikia.TelegramBotManager.BotManager.BotDto"
              }
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/bot",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto, Volo.Abp.Ddd.Application.Contracts",
                  "type": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "typeSimple": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Nikia.TelegramBotManager.BotManager.BotDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Nikia.TelegramBotManager.BotManager.BotDto>"
              }
            }
          }
        },
        "Nikia.TelegramBotManager.BotManager.FileService": {
          "controllerName": "File",
          "type": "Nikia.TelegramBotManager.BotManager.FileService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Nikia.TelegramBotManager.BotManager.IFileService"
            }
          ],
          "actions": {
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/app/file",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Nikia.TelegramBotManager.BotManager.FileDto, Nikia.TelegramBotManager.Application.Contracts",
                  "type": "Nikia.TelegramBotManager.BotManager.FileDto",
                  "typeSimple": "Nikia.TelegramBotManager.BotManager.FileDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Nikia.TelegramBotManager.BotManager.FileDto",
                  "typeSimple": "Nikia.TelegramBotManager.BotManager.FileDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Nikia.TelegramBotManager.BotManager.FileDto",
                "typeSimple": "Nikia.TelegramBotManager.BotManager.FileDto"
              }
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/app/file/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Nikia.TelegramBotManager.BotManager.FileDto, Nikia.TelegramBotManager.Application.Contracts",
                  "type": "Nikia.TelegramBotManager.BotManager.FileDto",
                  "typeSimple": "Nikia.TelegramBotManager.BotManager.FileDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Nikia.TelegramBotManager.BotManager.FileDto",
                  "typeSimple": "Nikia.TelegramBotManager.BotManager.FileDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Nikia.TelegramBotManager.BotManager.FileDto",
                "typeSimple": "Nikia.TelegramBotManager.BotManager.FileDto"
              }
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/app/file/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Nikia.TelegramBotManager.BotManager.FileDto",
                "typeSimple": "Nikia.TelegramBotManager.BotManager.FileDto"
              }
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/app/file",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Nikia.TelegramBotManager.BotManager.FileResultRequestDto, Nikia.TelegramBotManager.Application.Contracts",
                  "type": "Nikia.TelegramBotManager.BotManager.FileResultRequestDto",
                  "typeSimple": "Nikia.TelegramBotManager.BotManager.FileResultRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "BotId",
                  "type": "System.Guid?",
                  "typeSimple": "string?",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Nikia.TelegramBotManager.BotManager.FileDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Nikia.TelegramBotManager.BotManager.FileDto>"
              }
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/app/file/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "Nikia.TelegramBotManager.BotManager.ReportService": {
          "controllerName": "Report",
          "type": "Nikia.TelegramBotManager.BotManager.ReportService",
          "interfaces": [
            {
              "type": "Volo.Abp.Validation.IValidationEnabled"
            },
            {
              "type": "Volo.Abp.Auditing.IAuditingEnabled"
            },
            {
              "type": "Nikia.TelegramBotManager.BotManager.IReportService"
            }
          ],
          "actions": {
            "GetBotStatusReportList": {
              "uniqueName": "GetBotStatusReportList",
              "name": "GetBotStatusReportList",
              "httpMethod": "GET",
              "url": "api/app/report/bot-status-report-list",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<Nikia.TelegramBotManager.BotManager.BotStatusReportDto>",
                "typeSimple": "[Nikia.TelegramBotManager.BotManager.BotStatusReportDto]"
              }
            },
            "GetMostActiveUserList": {
              "uniqueName": "GetMostActiveUserList",
              "name": "GetMostActiveUserList",
              "httpMethod": "GET",
              "url": "api/app/report/most-active-user-list",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<Nikia.TelegramBotManager.BotManager.ReportDto>",
                "typeSimple": "[Nikia.TelegramBotManager.BotManager.ReportDto]"
              }
            },
            "GetMostUsadedFileList": {
              "uniqueName": "GetMostUsadedFileList",
              "name": "GetMostUsadedFileList",
              "httpMethod": "GET",
              "url": "api/app/report/most-usaded-file-list",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Collections.Generic.List<Nikia.TelegramBotManager.BotManager.ReportDto>",
                "typeSimple": "[Nikia.TelegramBotManager.BotManager.ReportDto]"
              }
            }
          }
        }
      }
    },
    "featureManagement": {
      "rootPath": "featureManagement",
      "remoteServiceName": "AbpFeatureManagement",
      "controllers": {
        "Volo.Abp.FeatureManagement.FeaturesController": {
          "controllerName": "Features",
          "type": "Volo.Abp.FeatureManagement.FeaturesController",
          "interfaces": [
            {
              "type": "Volo.Abp.FeatureManagement.IFeatureAppService"
            }
          ],
          "actions": {
            "GetAsyncByProviderNameAndProviderKey": {
              "uniqueName": "GetAsyncByProviderNameAndProviderKey",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/feature-management/features",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.FeatureManagement.GetFeatureListResultDto",
                "typeSimple": "Volo.Abp.FeatureManagement.GetFeatureListResultDto"
              }
            },
            "UpdateAsyncByProviderNameAndProviderKeyAndInput": {
              "uniqueName": "UpdateAsyncByProviderNameAndProviderKeyAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/feature-management/features",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "providerName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "providerKey",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.FeatureManagement.UpdateFeaturesDto, Volo.Abp.FeatureManagement.Application.Contracts",
                  "type": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "typeSimple": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "providerName",
                  "name": "providerName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "providerKey",
                  "name": "providerKey",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "typeSimple": "Volo.Abp.FeatureManagement.UpdateFeaturesDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        }
      }
    },
    "multi-tenancy": {
      "rootPath": "multi-tenancy",
      "remoteServiceName": "AbpTenantManagement",
      "controllers": {
        "Volo.Abp.TenantManagement.TenantController": {
          "controllerName": "Tenant",
          "type": "Volo.Abp.TenantManagement.TenantController",
          "interfaces": [
            {
              "type": "Volo.Abp.TenantManagement.ITenantAppService"
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy/tenants/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              }
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy/tenants",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.TenantManagement.GetTenantsInput, Volo.Abp.TenantManagement.Application.Contracts",
                  "type": "Volo.Abp.TenantManagement.GetTenantsInput",
                  "typeSimple": "Volo.Abp.TenantManagement.GetTenantsInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.TenantManagement.TenantDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.TenantManagement.TenantDto>"
              }
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/multi-tenancy/tenants",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.TenantManagement.TenantCreateDto, Volo.Abp.TenantManagement.Application.Contracts",
                  "type": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              }
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/multi-tenancy/tenants/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.TenantManagement.TenantUpdateDto, Volo.Abp.TenantManagement.Application.Contracts",
                  "type": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "typeSimple": "Volo.Abp.TenantManagement.TenantUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.TenantManagement.TenantDto",
                "typeSimple": "Volo.Abp.TenantManagement.TenantDto"
              }
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/multi-tenancy/tenants/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "GetDefaultConnectionStringAsyncById": {
              "uniqueName": "GetDefaultConnectionStringAsyncById",
              "name": "GetDefaultConnectionStringAsync",
              "httpMethod": "GET",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.String",
                "typeSimple": "string"
              }
            },
            "UpdateDefaultConnectionStringAsyncByIdAndDefaultConnectionString": {
              "uniqueName": "UpdateDefaultConnectionStringAsyncByIdAndDefaultConnectionString",
              "name": "UpdateDefaultConnectionStringAsync",
              "httpMethod": "PUT",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "defaultConnectionString",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "defaultConnectionString",
                  "name": "defaultConnectionString",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "DeleteDefaultConnectionStringAsyncById": {
              "uniqueName": "DeleteDefaultConnectionStringAsyncById",
              "name": "DeleteDefaultConnectionStringAsync",
              "httpMethod": "DELETE",
              "url": "api/multi-tenancy/tenants/{id}/default-connection-string",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        }
      }
    },
    "account": {
      "rootPath": "account",
      "remoteServiceName": "AbpAccount",
      "controllers": {
        "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController": {
          "controllerName": "Account",
          "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.AccountController",
          "interfaces": [],
          "actions": {
            "LoginByLogin": {
              "uniqueName": "LoginByLogin",
              "name": "Login",
              "httpMethod": "POST",
              "url": "api/account/login",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "login",
                  "typeAsString": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo, Volo.Abp.Account.Web",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "login",
                  "name": "login",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult",
                "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult"
              }
            },
            "Logout": {
              "uniqueName": "Logout",
              "name": "Logout",
              "httpMethod": "GET",
              "url": "api/account/logout",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "CheckPasswordByLogin": {
              "uniqueName": "CheckPasswordByLogin",
              "name": "CheckPassword",
              "httpMethod": "POST",
              "url": "api/account/check-password",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "login",
                  "typeAsString": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo, Volo.Abp.Account.Web",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "login",
                  "name": "login",
                  "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult",
                "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult"
              }
            }
          }
        },
        "Volo.Abp.Account.AccountController": {
          "controllerName": "Account",
          "type": "Volo.Abp.Account.AccountController",
          "interfaces": [
            {
              "type": "Volo.Abp.Account.IAccountAppService"
            }
          ],
          "actions": {
            "RegisterAsyncByInput": {
              "uniqueName": "RegisterAsyncByInput",
              "name": "RegisterAsync",
              "httpMethod": "POST",
              "url": "api/account/register",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.RegisterDto, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.RegisterDto",
                  "typeSimple": "Volo.Abp.Account.RegisterDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Account.RegisterDto",
                  "typeSimple": "Volo.Abp.Account.RegisterDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              }
            },
            "SendPasswordResetCodeAsyncByInput": {
              "uniqueName": "SendPasswordResetCodeAsyncByInput",
              "name": "SendPasswordResetCodeAsync",
              "httpMethod": "POST",
              "url": "api/account/send-password-reset-code",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.SendPasswordResetCodeDto, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "typeSimple": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "typeSimple": "Volo.Abp.Account.SendPasswordResetCodeDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "ResetPasswordAsyncByInput": {
              "uniqueName": "ResetPasswordAsyncByInput",
              "name": "ResetPasswordAsync",
              "httpMethod": "POST",
              "url": "api/account/reset-password",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Account.ResetPasswordDto, Volo.Abp.Account.Application.Contracts",
                  "type": "Volo.Abp.Account.ResetPasswordDto",
                  "typeSimple": "Volo.Abp.Account.ResetPasswordDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Account.ResetPasswordDto",
                  "typeSimple": "Volo.Abp.Account.ResetPasswordDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        }
      }
    },
    "abp": {
      "rootPath": "abp",
      "remoteServiceName": "abp",
      "controllers": {
        "Pages.Abp.MultiTenancy.AbpTenantController": {
          "controllerName": "AbpTenant",
          "type": "Pages.Abp.MultiTenancy.AbpTenantController",
          "interfaces": [
            {
              "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.IAbpTenantAppService"
            }
          ],
          "actions": {
            "FindTenantByNameAsyncByName": {
              "uniqueName": "FindTenantByNameAsyncByName",
              "name": "FindTenantByNameAsync",
              "httpMethod": "GET",
              "url": "api/abp/multi-tenancy/tenants/by-name/{name}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "name",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "name",
                  "name": "name",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
              }
            },
            "FindTenantByIdAsyncById": {
              "uniqueName": "FindTenantByIdAsyncById",
              "name": "FindTenantByIdAsync",
              "httpMethod": "GET",
              "url": "api/abp/multi-tenancy/tenants/by-id/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto"
              }
            }
          }
        },
        "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController": {
          "controllerName": "AbpApplicationConfiguration",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController",
          "interfaces": [
            {
              "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IAbpApplicationConfigurationAppService"
            }
          ],
          "actions": {
            "GetAsync": {
              "uniqueName": "GetAsync",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/abp/application-configuration",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto",
                "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto"
              }
            }
          }
        },
        "Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpApiDefinitionController": {
          "controllerName": "AbpApiDefinition",
          "type": "Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpApiDefinitionController",
          "interfaces": [],
          "actions": {
            "GetByModel": {
              "uniqueName": "GetByModel",
              "name": "Get",
              "httpMethod": "GET",
              "url": "api/abp/api-definition",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "model",
                  "typeAsString": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto, Volo.Abp.Http",
                  "type": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto",
                  "typeSimple": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "model",
                  "name": "IncludeTypes",
                  "type": "System.Boolean",
                  "typeSimple": "boolean",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "model"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel",
                "typeSimple": "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel"
              }
            }
          }
        }
      }
    },
    "identity": {
      "rootPath": "identity",
      "remoteServiceName": "AbpIdentity",
      "controllers": {
        "Volo.Abp.Identity.IdentityRoleController": {
          "controllerName": "IdentityRole",
          "type": "Volo.Abp.Identity.IdentityRoleController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IIdentityRoleAppService"
            }
          ],
          "actions": {
            "GetAllListAsync": {
              "uniqueName": "GetAllListAsync",
              "name": "GetAllListAsync",
              "httpMethod": "GET",
              "url": "api/identity/roles/all",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              }
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/identity/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.GetIdentityRolesInput, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.GetIdentityRolesInput",
                  "typeSimple": "Volo.Abp.Identity.GetIdentityRolesInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              }
            },
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/identity/roles/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              }
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/identity/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityRoleCreateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              }
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/identity/roles/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityRoleUpdateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityRoleUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityRoleDto",
                "typeSimple": "Volo.Abp.Identity.IdentityRoleDto"
              }
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/identity/roles/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        },
        "Volo.Abp.Identity.IdentityUserController": {
          "controllerName": "IdentityUser",
          "type": "Volo.Abp.Identity.IdentityUserController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IIdentityUserAppService"
            }
          ],
          "actions": {
            "GetAsyncById": {
              "uniqueName": "GetAsyncById",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              }
            },
            "GetListAsyncByInput": {
              "uniqueName": "GetListAsyncByInput",
              "name": "GetListAsync",
              "httpMethod": "GET",
              "url": "api/identity/users",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.GetIdentityUsersInput, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.GetIdentityUsersInput",
                  "typeSimple": "Volo.Abp.Identity.GetIdentityUsersInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityUserDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.PagedResultDto<Volo.Abp.Identity.IdentityUserDto>"
              }
            },
            "CreateAsyncByInput": {
              "uniqueName": "CreateAsyncByInput",
              "name": "CreateAsync",
              "httpMethod": "POST",
              "url": "api/identity/users",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserCreateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserCreateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              }
            },
            "UpdateAsyncByIdAndInput": {
              "uniqueName": "UpdateAsyncByIdAndInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/identity/users/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserUpdateDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              }
            },
            "DeleteAsyncById": {
              "uniqueName": "DeleteAsyncById",
              "name": "DeleteAsync",
              "httpMethod": "DELETE",
              "url": "api/identity/users/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "GetRolesAsyncById": {
              "uniqueName": "GetRolesAsyncById",
              "name": "GetRolesAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/{id}/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              }
            },
            "GetAssignableRolesAsync": {
              "uniqueName": "GetAssignableRolesAsync",
              "name": "GetAssignableRolesAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/assignable-roles",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Identity.IdentityRoleDto>"
              }
            },
            "UpdateRolesAsyncByIdAndInput": {
              "uniqueName": "UpdateRolesAsyncByIdAndInput",
              "name": "UpdateRolesAsync",
              "httpMethod": "PUT",
              "url": "api/identity/users/{id}/roles",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                },
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.IdentityUserUpdateRolesDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                },
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "typeSimple": "Volo.Abp.Identity.IdentityUserUpdateRolesDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            },
            "FindByUsernameAsyncByUserName": {
              "uniqueName": "FindByUsernameAsyncByUserName",
              "name": "FindByUsernameAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/by-username/{userName}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "userName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "userName",
                  "name": "userName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              }
            },
            "FindByEmailAsyncByEmail": {
              "uniqueName": "FindByEmailAsyncByEmail",
              "name": "FindByEmailAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/by-email/{email}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "email",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "email",
                  "name": "email",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.IdentityUserDto",
                "typeSimple": "Volo.Abp.Identity.IdentityUserDto"
              }
            }
          }
        },
        "Volo.Abp.Identity.IdentityUserLookupController": {
          "controllerName": "IdentityUserLookup",
          "type": "Volo.Abp.Identity.IdentityUserLookupController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IIdentityUserLookupAppService"
            }
          ],
          "actions": {
            "FindByIdAsyncById": {
              "uniqueName": "FindByIdAsyncById",
              "name": "FindByIdAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/{id}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "id",
                  "typeAsString": "System.Guid, System.Private.CoreLib",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "id",
                  "name": "id",
                  "type": "System.Guid",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Users.UserData",
                "typeSimple": "Volo.Abp.Users.UserData"
              }
            },
            "FindByUserNameAsyncByUserName": {
              "uniqueName": "FindByUserNameAsyncByUserName",
              "name": "FindByUserNameAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/by-username/{userName}",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "userName",
                  "typeAsString": "System.String, System.Private.CoreLib",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "userName",
                  "name": "userName",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": [],
                  "bindingSourceId": "Path",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Users.UserData",
                "typeSimple": "Volo.Abp.Users.UserData"
              }
            },
            "SearchAsyncByInput": {
              "uniqueName": "SearchAsyncByInput",
              "name": "SearchAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/search",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.UserLookupSearchInputDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.UserLookupSearchInputDto",
                  "typeSimple": "Volo.Abp.Identity.UserLookupSearchInputDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "Sorting",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "SkipCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                },
                {
                  "nameOnMethod": "input",
                  "name": "MaxResultCount",
                  "type": "System.Int32",
                  "typeSimple": "number",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Users.UserData>",
                "typeSimple": "Volo.Abp.Application.Dtos.ListResultDto<Volo.Abp.Users.UserData>"
              }
            },
            "GetCountAsyncByInput": {
              "uniqueName": "GetCountAsyncByInput",
              "name": "GetCountAsync",
              "httpMethod": "GET",
              "url": "api/identity/users/lookup/count",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.UserLookupCountInputDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.UserLookupCountInputDto",
                  "typeSimple": "Volo.Abp.Identity.UserLookupCountInputDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "Filter",
                  "type": "System.String",
                  "typeSimple": "string",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "ModelBinding",
                  "descriptorName": "input"
                }
              ],
              "returnValue": {
                "type": "System.Int64",
                "typeSimple": "number"
              }
            }
          }
        },
        "Volo.Abp.Identity.ProfileController": {
          "controllerName": "Profile",
          "type": "Volo.Abp.Identity.ProfileController",
          "interfaces": [
            {
              "type": "Volo.Abp.Identity.IProfileAppService"
            }
          ],
          "actions": {
            "GetAsync": {
              "uniqueName": "GetAsync",
              "name": "GetAsync",
              "httpMethod": "GET",
              "url": "api/identity/my-profile",
              "supportedVersions": [],
              "parametersOnMethod": [],
              "parameters": [],
              "returnValue": {
                "type": "Volo.Abp.Identity.ProfileDto",
                "typeSimple": "Volo.Abp.Identity.ProfileDto"
              }
            },
            "UpdateAsyncByInput": {
              "uniqueName": "UpdateAsyncByInput",
              "name": "UpdateAsync",
              "httpMethod": "PUT",
              "url": "api/identity/my-profile",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.UpdateProfileDto, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.UpdateProfileDto",
                  "typeSimple": "Volo.Abp.Identity.UpdateProfileDto",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.UpdateProfileDto",
                  "typeSimple": "Volo.Abp.Identity.UpdateProfileDto",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "Volo.Abp.Identity.ProfileDto",
                "typeSimple": "Volo.Abp.Identity.ProfileDto"
              }
            },
            "ChangePasswordAsyncByInput": {
              "uniqueName": "ChangePasswordAsyncByInput",
              "name": "ChangePasswordAsync",
              "httpMethod": "POST",
              "url": "api/identity/my-profile/change-password",
              "supportedVersions": [],
              "parametersOnMethod": [
                {
                  "name": "input",
                  "typeAsString": "Volo.Abp.Identity.ChangePasswordInput, Volo.Abp.Identity.Application.Contracts",
                  "type": "Volo.Abp.Identity.ChangePasswordInput",
                  "typeSimple": "Volo.Abp.Identity.ChangePasswordInput",
                  "isOptional": false,
                  "defaultValue": null
                }
              ],
              "parameters": [
                {
                  "nameOnMethod": "input",
                  "name": "input",
                  "type": "Volo.Abp.Identity.ChangePasswordInput",
                  "typeSimple": "Volo.Abp.Identity.ChangePasswordInput",
                  "isOptional": false,
                  "defaultValue": null,
                  "constraintTypes": null,
                  "bindingSourceId": "Body",
                  "descriptorName": ""
                }
              ],
              "returnValue": {
                "type": "System.Void",
                "typeSimple": "System.Void"
              }
            }
          }
        }
      }
    }
  },
  "types": {
    "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.UserLoginInfo": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserNameOrEmailAddress",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "Password",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "RememberMe",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.AbpLoginResult": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Result",
          "type": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.LoginResultType",
          "typeSimple": "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.LoginResultType",
          "isRequired": false
        },
        {
          "name": "Description",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Account.Web.Areas.Account.Controllers.Models.LoginResultType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Success",
        "InvalidUserNameOrPassword",
        "NotAllowed",
        "LockedOut",
        "RequiresTwoFactor"
      ],
      "enumValues": [
        1,
        2,
        3,
        4,
        5
      ],
      "genericArguments": null,
      "properties": null
    },
    "Volo.Abp.Account.RegisterDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "EmailAddress",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "Password",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "AppName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleFullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TenantId",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "UserName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Surname",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Email",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "EmailConfirmed",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "PhoneNumber",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "PhoneNumberConfirmed",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "LockoutEnabled",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "LockoutEnd",
          "type": "System.DateTimeOffset?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "ConcurrencyStamp",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleFullAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleAuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "IsDeleted",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "DeleterId",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "DeletionTime",
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleCreationAuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "LastModificationTime",
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "LastModifierId",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleCreationAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "CreationTime",
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CreatorId",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ExtensibleEntityDto<T0>": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TKey"
      ],
      "properties": [
        {
          "name": "Id",
          "type": "TKey",
          "typeSimple": "TKey",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.ObjectExtending.ExtensibleObject": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ExtraProperties",
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Account.SendPasswordResetCodeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Email",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "AppName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "ReturnUrl",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ReturnUrlHash",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Account.ResetPasswordDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserId",
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ResetToken",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "Password",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.FindTenantResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Success",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "TenantId",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.ListResultDto<T0>": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "Items",
          "type": "[T]",
          "typeSimple": "[T]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.IdentityRoleDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsDefault",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsStatic",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsPublic",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "ConcurrencyStamp",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.GetIdentityRolesInput": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Sorting",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.LimitedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "SkipCount",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.LimitedResultRequestDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DefaultMaxResultCount",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "MaxMaxResultCount",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "MaxResultCount",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.PagedResultDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.ListResultDto<T>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "TotalCount",
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.IdentityRoleCreateDto": {
      "baseType": "Volo.Abp.Identity.IdentityRoleCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "Volo.Abp.Identity.IdentityRoleCreateOrUpdateDtoBase": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "IsDefault",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsPublic",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.IdentityRoleUpdateDto": {
      "baseType": "Volo.Abp.Identity.IdentityRoleCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ConcurrencyStamp",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.GetIdentityUsersInput": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserCreateDto": {
      "baseType": "Volo.Abp.Identity.IdentityUserCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Password",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserCreateOrUpdateDtoBase": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Surname",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Email",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "PhoneNumber",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LockoutEnabled",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "RoleNames",
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserUpdateDto": {
      "baseType": "Volo.Abp.Identity.IdentityUserCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Password",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ConcurrencyStamp",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.IdentityUserUpdateRolesDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RoleNames",
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": true
        }
      ]
    },
    "Volo.Abp.Users.UserData": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TenantId",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "UserName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Surname",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Email",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "EmailConfirmed",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "PhoneNumber",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "PhoneNumberConfirmed",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.UserLookupSearchInputDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.UserLookupCountInputDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.ProfileDto": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Email",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Surname",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "PhoneNumber",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsExternal",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "HasPassword",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.UpdateProfileDto": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UserName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Email",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Surname",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "PhoneNumber",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Identity.ChangePasswordInput": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CurrentPassword",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NewPassword",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        }
      ]
    },
    "Volo.Abp.PermissionManagement.GetPermissionListResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "EntityDisplayName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Groups",
          "type": "[Volo.Abp.PermissionManagement.PermissionGroupDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.PermissionGroupDto]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.PermissionManagement.PermissionGroupDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Permissions",
          "type": "[Volo.Abp.PermissionManagement.PermissionGrantInfoDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.PermissionGrantInfoDto]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.PermissionManagement.PermissionGrantInfoDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ParentName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsGranted",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "AllowedProviders",
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        },
        {
          "name": "GrantedProviders",
          "type": "[Volo.Abp.PermissionManagement.ProviderInfoDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.ProviderInfoDto]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.PermissionManagement.ProviderInfoDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ProviderName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ProviderKey",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.PermissionManagement.UpdatePermissionsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Permissions",
          "type": "[Volo.Abp.PermissionManagement.UpdatePermissionDto]",
          "typeSimple": "[Volo.Abp.PermissionManagement.UpdatePermissionDto]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.PermissionManagement.UpdatePermissionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsGranted",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantDto": {
      "baseType": "Volo.Abp.Application.Dtos.ExtensibleEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.TenantManagement.GetTenantsInput": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Filter",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantCreateDto": {
      "baseType": "Volo.Abp.TenantManagement.TenantCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "AdminEmailAddress",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        },
        {
          "name": "AdminPassword",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantCreateOrUpdateDtoBase": {
      "baseType": "Volo.Abp.ObjectExtending.ExtensibleObject",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": true
        }
      ]
    },
    "Volo.Abp.TenantManagement.TenantUpdateDto": {
      "baseType": "Volo.Abp.TenantManagement.TenantCreateOrUpdateDtoBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "Volo.Abp.FeatureManagement.GetFeatureListResultDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Groups",
          "type": "[Volo.Abp.FeatureManagement.FeatureGroupDto]",
          "typeSimple": "[Volo.Abp.FeatureManagement.FeatureGroupDto]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.FeatureManagement.FeatureGroupDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Features",
          "type": "[Volo.Abp.FeatureManagement.FeatureDto]",
          "typeSimple": "[Volo.Abp.FeatureManagement.FeatureDto]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.FeatureManagement.FeatureDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Value",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Provider",
          "type": "Volo.Abp.FeatureManagement.FeatureProviderDto",
          "typeSimple": "Volo.Abp.FeatureManagement.FeatureProviderDto",
          "isRequired": false
        },
        {
          "name": "Description",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ValueType",
          "type": "Volo.Abp.Validation.StringValues.IStringValueType",
          "typeSimple": "Volo.Abp.Validation.StringValues.IStringValueType",
          "isRequired": false
        },
        {
          "name": "Depth",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "ParentName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.FeatureManagement.FeatureProviderDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Key",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Validation.StringValues.IStringValueType": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Item",
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false
        },
        {
          "name": "Properties",
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false
        },
        {
          "name": "Validator",
          "type": "Volo.Abp.Validation.StringValues.IValueValidator",
          "typeSimple": "Volo.Abp.Validation.StringValues.IValueValidator",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Validation.StringValues.IValueValidator": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Item",
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false
        },
        {
          "name": "Properties",
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.FeatureManagement.UpdateFeaturesDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Features",
          "type": "[Volo.Abp.FeatureManagement.UpdateFeatureDto]",
          "typeSimple": "[Volo.Abp.FeatureManagement.UpdateFeatureDto]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.FeatureManagement.UpdateFeatureDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Value",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Localization",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto",
          "isRequired": false
        },
        {
          "name": "Auth",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto",
          "isRequired": false
        },
        {
          "name": "Setting",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto",
          "isRequired": false
        },
        {
          "name": "CurrentUser",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto",
          "isRequired": false
        },
        {
          "name": "Features",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto",
          "isRequired": false
        },
        {
          "name": "MultiTenancy",
          "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto",
          "isRequired": false
        },
        {
          "name": "CurrentTenant",
          "type": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto",
          "isRequired": false
        },
        {
          "name": "Timing",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto",
          "isRequired": false
        },
        {
          "name": "Clock",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto",
          "isRequired": false
        },
        {
          "name": "ObjectExtensions",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationLocalizationConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Values",
          "type": "{System.String:System.Collections.Generic.Dictionary<System.String,System.String>}",
          "typeSimple": "{string:System.Collections.Generic.Dictionary<string,string>}",
          "isRequired": false
        },
        {
          "name": "Languages",
          "type": "[Volo.Abp.Localization.LanguageInfo]",
          "typeSimple": "[Volo.Abp.Localization.LanguageInfo]",
          "isRequired": false
        },
        {
          "name": "CurrentCulture",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto",
          "isRequired": false
        },
        {
          "name": "DefaultResourceName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LanguagesMap",
          "type": "{System.String:[Volo.Abp.NameValue]}",
          "typeSimple": "{string:[Volo.Abp.NameValue]}",
          "isRequired": false
        },
        {
          "name": "LanguageFilesMap",
          "type": "{System.String:[Volo.Abp.NameValue]}",
          "typeSimple": "{string:[Volo.Abp.NameValue]}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Localization.LanguageInfo": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CultureName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "UiCultureName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FlagIcon",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentCultureDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "DisplayName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "EnglishName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ThreeLetterIsoLanguageName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TwoLetterIsoLanguageName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsRightToLeft",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "CultureName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NativeName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DateTimeFormat",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.DateTimeFormatDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CalendarAlgorithmType",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DateTimeFormatLong",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ShortDatePattern",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FullDateTimePattern",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DateSeparator",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ShortTimePattern",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LongTimePattern",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.NameValue": {
      "baseType": "Volo.Abp.NameValue<System.String>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "Volo.Abp.NameValue<T0>": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "T"
      ],
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Value",
          "type": "T",
          "typeSimple": "T",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationAuthConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Policies",
          "type": "{System.String:System.Boolean}",
          "typeSimple": "{string:boolean}",
          "isRequired": false
        },
        {
          "name": "GrantedPolicies",
          "type": "{System.String:System.Boolean}",
          "typeSimple": "{string:boolean}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationSettingConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Values",
          "type": "{System.String:System.String}",
          "typeSimple": "{string:string}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.CurrentUserDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAuthenticated",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "Id",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "TenantId",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "UserName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SurName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Email",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "EmailVerified",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "PhoneNumber",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "PhoneNumberVerified",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "Roles",
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ApplicationFeatureConfigurationDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Values",
          "type": "{System.String:System.String}",
          "typeSimple": "{string:string}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.MultiTenancyInfoDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsEnabled",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.MultiTenancy.CurrentTenantDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsAvailable",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimingDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TimeZone",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.TimeZone": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Iana",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone",
          "isRequired": false
        },
        {
          "name": "Windows",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.IanaTimeZone": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TimeZoneName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.WindowsTimeZone": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TimeZoneId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ClockDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Kind",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ObjectExtensionsDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Modules",
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto}",
          "isRequired": false
        },
        {
          "name": "Enums",
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ModuleExtensionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Entities",
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto}",
          "isRequired": false
        },
        {
          "name": "Configuration",
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.EntityExtensionDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Properties",
          "type": "{System.String:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto}",
          "typeSimple": "{string:Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto}",
          "isRequired": false
        },
        {
          "name": "Configuration",
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TypeSimple",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayName",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto",
          "isRequired": false
        },
        {
          "name": "Api",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto",
          "isRequired": false
        },
        {
          "name": "Ui",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto",
          "isRequired": false
        },
        {
          "name": "Attributes",
          "type": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto]",
          "typeSimple": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto]",
          "isRequired": false
        },
        {
          "name": "Configuration",
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false
        },
        {
          "name": "DefaultValue",
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.LocalizableStringDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Resource",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "OnGet",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto",
          "isRequired": false
        },
        {
          "name": "OnCreate",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto",
          "isRequired": false
        },
        {
          "name": "OnUpdate",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiGetDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAvailable",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiCreateDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAvailable",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyApiUpdateDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsAvailable",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "OnTable",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto",
          "isRequired": false
        },
        {
          "name": "OnCreateForm",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "isRequired": false
        },
        {
          "name": "OnEditForm",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto",
          "isRequired": false
        },
        {
          "name": "Lookup",
          "type": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto",
          "typeSimple": "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiTableDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsVisible",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiFormDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IsVisible",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyUiLookupDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Url",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ResultListPropertyName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DisplayPropertyName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ValuePropertyName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FilterParamName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "TypeSimple",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Config",
          "type": "{System.String:System.Object}",
          "typeSimple": "{string:object}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Fields",
          "type": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto]",
          "typeSimple": "[Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto]",
          "isRequired": false
        },
        {
          "name": "LocalizationResource",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionEnumFieldDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Value",
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModelRequestDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "IncludeTypes",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ApplicationApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Modules",
          "type": "{System.String:Volo.Abp.Http.Modeling.ModuleApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ModuleApiDescriptionModel}",
          "isRequired": false
        },
        {
          "name": "Types",
          "type": "{System.String:Volo.Abp.Http.Modeling.TypeApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.TypeApiDescriptionModel}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ModuleApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "RootPath",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "RemoteServiceName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Controllers",
          "type": "{System.String:Volo.Abp.Http.Modeling.ControllerApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ControllerApiDescriptionModel}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ControllerApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ControllerName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Interfaces",
          "type": "[Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel]",
          "isRequired": false
        },
        {
          "name": "Actions",
          "type": "{System.String:Volo.Abp.Http.Modeling.ActionApiDescriptionModel}",
          "typeSimple": "{string:Volo.Abp.Http.Modeling.ActionApiDescriptionModel}",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ControllerInterfaceApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ActionApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "UniqueName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "HttpMethod",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Url",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SupportedVersions",
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        },
        {
          "name": "ParametersOnMethod",
          "type": "[Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel]",
          "isRequired": false
        },
        {
          "name": "Parameters",
          "type": "[Volo.Abp.Http.Modeling.ParameterApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.ParameterApiDescriptionModel]",
          "isRequired": false
        },
        {
          "name": "ReturnValue",
          "type": "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel",
          "typeSimple": "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.MethodParameterApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TypeAsString",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TypeSimple",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsOptional",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "DefaultValue",
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ParameterApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "NameOnMethod",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TypeSimple",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsOptional",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "DefaultValue",
          "type": "System.Object",
          "typeSimple": "object",
          "isRequired": false
        },
        {
          "name": "ConstraintTypes",
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        },
        {
          "name": "BindingSourceId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "DescriptorName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.ReturnValueApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TypeSimple",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.TypeApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BaseType",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsEnum",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "EnumNames",
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        },
        {
          "name": "EnumValues",
          "type": "[System.Object]",
          "typeSimple": "[object]",
          "isRequired": false
        },
        {
          "name": "GenericArguments",
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        },
        {
          "name": "Properties",
          "type": "[Volo.Abp.Http.Modeling.PropertyApiDescriptionModel]",
          "typeSimple": "[Volo.Abp.Http.Modeling.PropertyApiDescriptionModel]",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Http.Modeling.PropertyApiDescriptionModel": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TypeSimple",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsRequired",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Update": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Message",
          "type": "Telegram.Bot.Types.Message",
          "typeSimple": "Telegram.Bot.Types.Message",
          "isRequired": false
        },
        {
          "name": "EditedMessage",
          "type": "Telegram.Bot.Types.Message",
          "typeSimple": "Telegram.Bot.Types.Message",
          "isRequired": false
        },
        {
          "name": "InlineQuery",
          "type": "Telegram.Bot.Types.InlineQuery",
          "typeSimple": "Telegram.Bot.Types.InlineQuery",
          "isRequired": false
        },
        {
          "name": "ChosenInlineResult",
          "type": "Telegram.Bot.Types.ChosenInlineResult",
          "typeSimple": "Telegram.Bot.Types.ChosenInlineResult",
          "isRequired": false
        },
        {
          "name": "CallbackQuery",
          "type": "Telegram.Bot.Types.CallbackQuery",
          "typeSimple": "Telegram.Bot.Types.CallbackQuery",
          "isRequired": false
        },
        {
          "name": "ChannelPost",
          "type": "Telegram.Bot.Types.Message",
          "typeSimple": "Telegram.Bot.Types.Message",
          "isRequired": false
        },
        {
          "name": "EditedChannelPost",
          "type": "Telegram.Bot.Types.Message",
          "typeSimple": "Telegram.Bot.Types.Message",
          "isRequired": false
        },
        {
          "name": "ShippingQuery",
          "type": "Telegram.Bot.Types.Payments.ShippingQuery",
          "typeSimple": "Telegram.Bot.Types.Payments.ShippingQuery",
          "isRequired": false
        },
        {
          "name": "PreCheckoutQuery",
          "type": "Telegram.Bot.Types.Payments.PreCheckoutQuery",
          "typeSimple": "Telegram.Bot.Types.Payments.PreCheckoutQuery",
          "isRequired": false
        },
        {
          "name": "Poll",
          "type": "Telegram.Bot.Types.Poll",
          "typeSimple": "Telegram.Bot.Types.Poll",
          "isRequired": false
        },
        {
          "name": "PollAnswer",
          "type": "Telegram.Bot.Types.PollAnswer",
          "typeSimple": "Telegram.Bot.Types.PollAnswer",
          "isRequired": false
        },
        {
          "name": "Type",
          "type": "Telegram.Bot.Types.Enums.UpdateType",
          "typeSimple": "Telegram.Bot.Types.Enums.UpdateType",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Message": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "MessageId",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "From",
          "type": "Telegram.Bot.Types.User",
          "typeSimple": "Telegram.Bot.Types.User",
          "isRequired": false
        },
        {
          "name": "UnixDateTime",
          "type": "System.Int64?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "Date",
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Chat",
          "type": "Telegram.Bot.Types.Chat",
          "typeSimple": "Telegram.Bot.Types.Chat",
          "isRequired": false
        },
        {
          "name": "IsForwarded",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "ForwardFrom",
          "type": "Telegram.Bot.Types.User",
          "typeSimple": "Telegram.Bot.Types.User",
          "isRequired": false
        },
        {
          "name": "ForwardFromChat",
          "type": "Telegram.Bot.Types.Chat",
          "typeSimple": "Telegram.Bot.Types.Chat",
          "isRequired": false
        },
        {
          "name": "ForwardFromMessageId",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "ForwardSignature",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ForwardSenderName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ForwardDate",
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "ReplyToMessage",
          "type": "Telegram.Bot.Types.Message",
          "typeSimple": "Telegram.Bot.Types.Message",
          "isRequired": false
        },
        {
          "name": "ViaBot",
          "type": "Telegram.Bot.Types.User",
          "typeSimple": "Telegram.Bot.Types.User",
          "isRequired": false
        },
        {
          "name": "EditDate",
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "MediaGroupId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AuthorSignature",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Text",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Entities",
          "type": "[Telegram.Bot.Types.MessageEntity]",
          "typeSimple": "[Telegram.Bot.Types.MessageEntity]",
          "isRequired": false
        },
        {
          "name": "EntityValues",
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        },
        {
          "name": "CaptionEntities",
          "type": "[Telegram.Bot.Types.MessageEntity]",
          "typeSimple": "[Telegram.Bot.Types.MessageEntity]",
          "isRequired": false
        },
        {
          "name": "CaptionEntityValues",
          "type": "[System.String]",
          "typeSimple": "[string]",
          "isRequired": false
        },
        {
          "name": "Audio",
          "type": "Telegram.Bot.Types.Audio",
          "typeSimple": "Telegram.Bot.Types.Audio",
          "isRequired": false
        },
        {
          "name": "Document",
          "type": "Telegram.Bot.Types.Document",
          "typeSimple": "Telegram.Bot.Types.Document",
          "isRequired": false
        },
        {
          "name": "Animation",
          "type": "Telegram.Bot.Types.Animation",
          "typeSimple": "Telegram.Bot.Types.Animation",
          "isRequired": false
        },
        {
          "name": "Game",
          "type": "Telegram.Bot.Types.Game",
          "typeSimple": "Telegram.Bot.Types.Game",
          "isRequired": false
        },
        {
          "name": "Photo",
          "type": "[Telegram.Bot.Types.PhotoSize]",
          "typeSimple": "[Telegram.Bot.Types.PhotoSize]",
          "isRequired": false
        },
        {
          "name": "Sticker",
          "type": "Telegram.Bot.Types.Sticker",
          "typeSimple": "Telegram.Bot.Types.Sticker",
          "isRequired": false
        },
        {
          "name": "Video",
          "type": "Telegram.Bot.Types.Video",
          "typeSimple": "Telegram.Bot.Types.Video",
          "isRequired": false
        },
        {
          "name": "Voice",
          "type": "Telegram.Bot.Types.Voice",
          "typeSimple": "Telegram.Bot.Types.Voice",
          "isRequired": false
        },
        {
          "name": "VideoNote",
          "type": "Telegram.Bot.Types.VideoNote",
          "typeSimple": "Telegram.Bot.Types.VideoNote",
          "isRequired": false
        },
        {
          "name": "Caption",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Contact",
          "type": "Telegram.Bot.Types.Contact",
          "typeSimple": "Telegram.Bot.Types.Contact",
          "isRequired": false
        },
        {
          "name": "Location",
          "type": "Telegram.Bot.Types.Location",
          "typeSimple": "Telegram.Bot.Types.Location",
          "isRequired": false
        },
        {
          "name": "Venue",
          "type": "Telegram.Bot.Types.Venue",
          "typeSimple": "Telegram.Bot.Types.Venue",
          "isRequired": false
        },
        {
          "name": "Poll",
          "type": "Telegram.Bot.Types.Poll",
          "typeSimple": "Telegram.Bot.Types.Poll",
          "isRequired": false
        },
        {
          "name": "Dice",
          "type": "Telegram.Bot.Types.Dice",
          "typeSimple": "Telegram.Bot.Types.Dice",
          "isRequired": false
        },
        {
          "name": "NewChatMembers",
          "type": "[Telegram.Bot.Types.User]",
          "typeSimple": "[Telegram.Bot.Types.User]",
          "isRequired": false
        },
        {
          "name": "LeftChatMember",
          "type": "Telegram.Bot.Types.User",
          "typeSimple": "Telegram.Bot.Types.User",
          "isRequired": false
        },
        {
          "name": "NewChatTitle",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "NewChatPhoto",
          "type": "[Telegram.Bot.Types.PhotoSize]",
          "typeSimple": "[Telegram.Bot.Types.PhotoSize]",
          "isRequired": false
        },
        {
          "name": "DeleteChatPhoto",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "GroupChatCreated",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "SupergroupChatCreated",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "ChannelChatCreated",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "MigrateToChatId",
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "MigrateFromChatId",
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "PinnedMessage",
          "type": "Telegram.Bot.Types.Message",
          "typeSimple": "Telegram.Bot.Types.Message",
          "isRequired": false
        },
        {
          "name": "Invoice",
          "type": "Telegram.Bot.Types.Payments.Invoice",
          "typeSimple": "Telegram.Bot.Types.Payments.Invoice",
          "isRequired": false
        },
        {
          "name": "SuccessfulPayment",
          "type": "Telegram.Bot.Types.Payments.SuccessfulPayment",
          "typeSimple": "Telegram.Bot.Types.Payments.SuccessfulPayment",
          "isRequired": false
        },
        {
          "name": "ConnectedWebsite",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "PassportData",
          "type": "Telegram.Bot.Types.Passport.PassportData",
          "typeSimple": "Telegram.Bot.Types.Passport.PassportData",
          "isRequired": false
        },
        {
          "name": "ReplyMarkup",
          "type": "Telegram.Bot.Types.ReplyMarkups.InlineKeyboardMarkup",
          "typeSimple": "Telegram.Bot.Types.ReplyMarkups.InlineKeyboardMarkup",
          "isRequired": false
        },
        {
          "name": "Type",
          "type": "Telegram.Bot.Types.Enums.MessageType",
          "typeSimple": "Telegram.Bot.Types.Enums.MessageType",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.User": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "IsBot",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "FirstName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LastName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Username",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LanguageCode",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CanJoinGroups",
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false
        },
        {
          "name": "CanReadAllGroupMessages",
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false
        },
        {
          "name": "SupportsInlineQueries",
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Chat": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Type",
          "type": "Telegram.Bot.Types.Enums.ChatType",
          "typeSimple": "Telegram.Bot.Types.Enums.ChatType",
          "isRequired": false
        },
        {
          "name": "Title",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Username",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FirstName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LastName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AllMembersAreAdministrators",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "Photo",
          "type": "Telegram.Bot.Types.ChatPhoto",
          "typeSimple": "Telegram.Bot.Types.ChatPhoto",
          "isRequired": false
        },
        {
          "name": "Description",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "InviteLink",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "PinnedMessage",
          "type": "Telegram.Bot.Types.Message",
          "typeSimple": "Telegram.Bot.Types.Message",
          "isRequired": false
        },
        {
          "name": "Permissions",
          "type": "Telegram.Bot.Types.ChatPermissions",
          "typeSimple": "Telegram.Bot.Types.ChatPermissions",
          "isRequired": false
        },
        {
          "name": "SlowModeDelay",
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "StickerSetName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CanSetStickerSet",
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Enums.ChatType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Private",
        "Group",
        "Channel",
        "Supergroup"
      ],
      "enumValues": [
        "private",
        "group",
        "channel",
        "supergroup"
      ],
      "genericArguments": null,
      "properties": null
    },
    "Telegram.Bot.Types.ChatPhoto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BigFileId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "BigFileUniqueId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SmallFileId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SmallFileUniqueId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.ChatPermissions": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CanSendMessages",
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false
        },
        {
          "name": "CanSendMediaMessages",
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false
        },
        {
          "name": "CanSendPolls",
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false
        },
        {
          "name": "CanSendOtherMessages",
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false
        },
        {
          "name": "CanAddWebPagePreviews",
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false
        },
        {
          "name": "CanChangeInfo",
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false
        },
        {
          "name": "CanInviteUsers",
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false
        },
        {
          "name": "CanPinMessages",
          "type": "System.Boolean?",
          "typeSimple": "boolean?",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.MessageEntity": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "type": "Telegram.Bot.Types.Enums.MessageEntityType",
          "typeSimple": "Telegram.Bot.Types.Enums.MessageEntityType",
          "isRequired": false
        },
        {
          "name": "Offset",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Length",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Url",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "User",
          "type": "Telegram.Bot.Types.User",
          "typeSimple": "Telegram.Bot.Types.User",
          "isRequired": false
        },
        {
          "name": "Language",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Enums.MessageEntityType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Mention",
        "Hashtag",
        "BotCommand",
        "Url",
        "Email",
        "Bold",
        "Italic",
        "Code",
        "Pre",
        "TextLink",
        "TextMention",
        "PhoneNumber",
        "Cashtag",
        "Unknown",
        "Underline",
        "Strikethrough"
      ],
      "enumValues": [
        "mention",
        "hashtag",
        "bot_command",
        "url",
        "email",
        "bold",
        "italic",
        "code",
        "pre",
        "text_link",
        "text_mention",
        "phone_number",
        "cashtag",
        "unknown",
        "underline",
        "strikethrough"
      ],
      "genericArguments": null,
      "properties": null
    },
    "Telegram.Bot.Types.Audio": {
      "baseType": "Telegram.Bot.Types.FileBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Duration",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Performer",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Title",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "MimeType",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Thumb",
          "type": "Telegram.Bot.Types.PhotoSize",
          "typeSimple": "Telegram.Bot.Types.PhotoSize",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.FileBase": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FileId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FileUniqueId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FileSize",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.PhotoSize": {
      "baseType": "Telegram.Bot.Types.FileBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Width",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Height",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Document": {
      "baseType": "Telegram.Bot.Types.FileBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Thumb",
          "type": "Telegram.Bot.Types.PhotoSize",
          "typeSimple": "Telegram.Bot.Types.PhotoSize",
          "isRequired": false
        },
        {
          "name": "FileName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "MimeType",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Animation": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FileId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FileUniqueId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Width",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Height",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Duration",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Thumb",
          "type": "Telegram.Bot.Types.PhotoSize",
          "typeSimple": "Telegram.Bot.Types.PhotoSize",
          "isRequired": false
        },
        {
          "name": "FileName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "MimeType",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FileSize",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Game": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Title",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Description",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Photo",
          "type": "[Telegram.Bot.Types.PhotoSize]",
          "typeSimple": "[Telegram.Bot.Types.PhotoSize]",
          "isRequired": false
        },
        {
          "name": "Text",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TextEntities",
          "type": "[Telegram.Bot.Types.MessageEntity]",
          "typeSimple": "[Telegram.Bot.Types.MessageEntity]",
          "isRequired": false
        },
        {
          "name": "Animation",
          "type": "Telegram.Bot.Types.Animation",
          "typeSimple": "Telegram.Bot.Types.Animation",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Sticker": {
      "baseType": "Telegram.Bot.Types.FileBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Width",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Height",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "IsAnimated",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "Thumb",
          "type": "Telegram.Bot.Types.PhotoSize",
          "typeSimple": "Telegram.Bot.Types.PhotoSize",
          "isRequired": false
        },
        {
          "name": "Emoji",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SetName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "MaskPosition",
          "type": "Telegram.Bot.Types.MaskPosition",
          "typeSimple": "Telegram.Bot.Types.MaskPosition",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.MaskPosition": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Point",
          "type": "Telegram.Bot.Types.Enums.MaskPositionPoint",
          "typeSimple": "Telegram.Bot.Types.Enums.MaskPositionPoint",
          "isRequired": false
        },
        {
          "name": "XShift",
          "type": "System.Single",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "YShift",
          "type": "System.Single",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Scale",
          "type": "System.Single",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Enums.MaskPositionPoint": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Forehead",
        "Eyes",
        "Mouth",
        "Chin"
      ],
      "enumValues": [
        "forehead",
        "eyes",
        "mouth",
        "chin"
      ],
      "genericArguments": null,
      "properties": null
    },
    "Telegram.Bot.Types.Video": {
      "baseType": "Telegram.Bot.Types.FileBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Width",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Height",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Duration",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Thumb",
          "type": "Telegram.Bot.Types.PhotoSize",
          "typeSimple": "Telegram.Bot.Types.PhotoSize",
          "isRequired": false
        },
        {
          "name": "MimeType",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Voice": {
      "baseType": "Telegram.Bot.Types.FileBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Duration",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "MimeType",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.VideoNote": {
      "baseType": "Telegram.Bot.Types.FileBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Length",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Duration",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Thumb",
          "type": "Telegram.Bot.Types.PhotoSize",
          "typeSimple": "Telegram.Bot.Types.PhotoSize",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Contact": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "PhoneNumber",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FirstName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LastName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "UserId",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Vcard",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Location": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Longitude",
          "type": "System.Single",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Latitude",
          "type": "System.Single",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Venue": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Location",
          "type": "Telegram.Bot.Types.Location",
          "typeSimple": "Telegram.Bot.Types.Location",
          "isRequired": false
        },
        {
          "name": "Title",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Address",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FoursquareId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FoursquareType",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Poll": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Question",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Options",
          "type": "[Telegram.Bot.Types.PollOption]",
          "typeSimple": "[Telegram.Bot.Types.PollOption]",
          "isRequired": false
        },
        {
          "name": "TotalVoterCount",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "IsClosed",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "IsAnonymous",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "AllowsMultipleAnswers",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "CorrectOptionId",
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "Explanation",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ExplanationEntities",
          "type": "[Telegram.Bot.Types.MessageEntity]",
          "typeSimple": "[Telegram.Bot.Types.MessageEntity]",
          "isRequired": false
        },
        {
          "name": "OpenPeriod",
          "type": "System.Int32?",
          "typeSimple": "number?",
          "isRequired": false
        },
        {
          "name": "CloseDate",
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.PollOption": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Text",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "VoterCount",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Dice": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Emoji",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Value",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Payments.Invoice": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Title",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Description",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "StartParameter",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Currency",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TotalAmount",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Payments.SuccessfulPayment": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Currency",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TotalAmount",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "InvoicePayload",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ShippingOptionId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "OrderInfo",
          "type": "Telegram.Bot.Types.Payments.OrderInfo",
          "typeSimple": "Telegram.Bot.Types.Payments.OrderInfo",
          "isRequired": false
        },
        {
          "name": "TelegramPaymentChargeId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ProviderPaymentChargeId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Payments.OrderInfo": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "PhoneNumber",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Email",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ShippingAddress",
          "type": "Telegram.Bot.Types.Payments.ShippingAddress",
          "typeSimple": "Telegram.Bot.Types.Payments.ShippingAddress",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Payments.ShippingAddress": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "CountryCode",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "State",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "City",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "StreetLine1",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "StreetLine2",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "PostCode",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Passport.PassportData": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Data",
          "type": "[Telegram.Bot.Types.Passport.EncryptedPassportElement]",
          "typeSimple": "[Telegram.Bot.Types.Passport.EncryptedPassportElement]",
          "isRequired": false
        },
        {
          "name": "Credentials",
          "type": "Telegram.Bot.Types.Passport.EncryptedCredentials",
          "typeSimple": "Telegram.Bot.Types.Passport.EncryptedCredentials",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Passport.EncryptedPassportElement": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Type",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Hash",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Data",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "PhoneNumber",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Email",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Files",
          "type": "[Telegram.Bot.Types.Passport.PassportFile]",
          "typeSimple": "[Telegram.Bot.Types.Passport.PassportFile]",
          "isRequired": false
        },
        {
          "name": "FrontSide",
          "type": "Telegram.Bot.Types.Passport.PassportFile",
          "typeSimple": "Telegram.Bot.Types.Passport.PassportFile",
          "isRequired": false
        },
        {
          "name": "ReverseSide",
          "type": "Telegram.Bot.Types.Passport.PassportFile",
          "typeSimple": "Telegram.Bot.Types.Passport.PassportFile",
          "isRequired": false
        },
        {
          "name": "Selfie",
          "type": "Telegram.Bot.Types.Passport.PassportFile",
          "typeSimple": "Telegram.Bot.Types.Passport.PassportFile",
          "isRequired": false
        },
        {
          "name": "Translation",
          "type": "[Telegram.Bot.Types.Passport.PassportFile]",
          "typeSimple": "[Telegram.Bot.Types.Passport.PassportFile]",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Passport.PassportFile": {
      "baseType": "Telegram.Bot.Types.FileBase",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "FileDate",
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Passport.EncryptedCredentials": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Data",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Hash",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Secret",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.ReplyMarkups.InlineKeyboardMarkup": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "InlineKeyboard",
          "type": "[[Telegram.Bot.Types.ReplyMarkups.InlineKeyboardButton]]",
          "typeSimple": "[[Telegram.Bot.Types.ReplyMarkups.InlineKeyboardButton]]",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.ReplyMarkups.InlineKeyboardButton": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Text",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Url",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "LoginUrl",
          "type": "Telegram.Bot.Types.LoginUrl",
          "typeSimple": "Telegram.Bot.Types.LoginUrl",
          "isRequired": false
        },
        {
          "name": "CallbackData",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SwitchInlineQuery",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "SwitchInlineQueryCurrentChat",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CallbackGame",
          "type": "Telegram.Bot.Types.CallbackGame",
          "typeSimple": "Telegram.Bot.Types.CallbackGame",
          "isRequired": false
        },
        {
          "name": "Pay",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.LoginUrl": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Url",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ForwardText",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "BotUsername",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "RequestWriteAccess",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.CallbackGame": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "Telegram.Bot.Types.Enums.MessageType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Unknown",
        "Text",
        "Photo",
        "Audio",
        "Video",
        "Voice",
        "Document",
        "Sticker",
        "Location",
        "Contact",
        "Venue",
        "Game",
        "VideoNote",
        "Invoice",
        "SuccessfulPayment",
        "WebsiteConnected",
        "ChatMembersAdded",
        "ChatMemberLeft",
        "ChatTitleChanged",
        "ChatPhotoChanged",
        "MessagePinned",
        "ChatPhotoDeleted",
        "GroupCreated",
        "SupergroupCreated",
        "ChannelCreated",
        "MigratedToSupergroup",
        "MigratedFromGroup",
        "Animation",
        "Poll",
        "Dice"
      ],
      "enumValues": [
        "unknown",
        "text",
        "photo",
        "audio",
        "video",
        "voice",
        "document",
        "sticker",
        "location",
        "contact",
        "venue",
        "game",
        "video_note",
        "invoice",
        "successful_payment",
        "website_connected",
        "chat_members_added",
        "chat_member_left",
        "chat_title_changed",
        "chat_photo_changed",
        "message_pinned",
        "chat_photo_deleted",
        "group_created",
        "supergroup_created",
        "channel_created",
        "migrated_to_supergroup",
        "migrated_from_group",
        "animation",
        "poll",
        "dice"
      ],
      "genericArguments": null,
      "properties": null
    },
    "Telegram.Bot.Types.InlineQuery": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "From",
          "type": "Telegram.Bot.Types.User",
          "typeSimple": "Telegram.Bot.Types.User",
          "isRequired": false
        },
        {
          "name": "Query",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Location",
          "type": "Telegram.Bot.Types.Location",
          "typeSimple": "Telegram.Bot.Types.Location",
          "isRequired": false
        },
        {
          "name": "Offset",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.ChosenInlineResult": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "ResultId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "From",
          "type": "Telegram.Bot.Types.User",
          "typeSimple": "Telegram.Bot.Types.User",
          "isRequired": false
        },
        {
          "name": "Location",
          "type": "Telegram.Bot.Types.Location",
          "typeSimple": "Telegram.Bot.Types.Location",
          "isRequired": false
        },
        {
          "name": "InlineMessageId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Query",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.CallbackQuery": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "From",
          "type": "Telegram.Bot.Types.User",
          "typeSimple": "Telegram.Bot.Types.User",
          "isRequired": false
        },
        {
          "name": "Message",
          "type": "Telegram.Bot.Types.Message",
          "typeSimple": "Telegram.Bot.Types.Message",
          "isRequired": false
        },
        {
          "name": "InlineMessageId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ChatInstance",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Data",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "GameShortName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsGameQuery",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Payments.ShippingQuery": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "From",
          "type": "Telegram.Bot.Types.User",
          "typeSimple": "Telegram.Bot.Types.User",
          "isRequired": false
        },
        {
          "name": "InvoicePayload",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ShippingAddress",
          "type": "Telegram.Bot.Types.Payments.ShippingAddress",
          "typeSimple": "Telegram.Bot.Types.Payments.ShippingAddress",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Payments.PreCheckoutQuery": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Id",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "From",
          "type": "Telegram.Bot.Types.User",
          "typeSimple": "Telegram.Bot.Types.User",
          "isRequired": false
        },
        {
          "name": "Currency",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TotalAmount",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "InvoicePayload",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ShippingOptionId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "OrderInfo",
          "type": "Telegram.Bot.Types.Payments.OrderInfo",
          "typeSimple": "Telegram.Bot.Types.Payments.OrderInfo",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.PollAnswer": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "PollId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "User",
          "type": "Telegram.Bot.Types.User",
          "typeSimple": "Telegram.Bot.Types.User",
          "isRequired": false
        },
        {
          "name": "OptionIds",
          "type": "[System.Int32]",
          "typeSimple": "[number]",
          "isRequired": false
        }
      ]
    },
    "Telegram.Bot.Types.Enums.UpdateType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Unknown",
        "Message",
        "InlineQuery",
        "ChosenInlineResult",
        "CallbackQuery",
        "EditedMessage",
        "ChannelPost",
        "EditedChannelPost",
        "ShippingQuery",
        "PreCheckoutQuery",
        "Poll",
        "PollAnswer"
      ],
      "enumValues": [
        "unknown",
        "message",
        "inline_query",
        "chosen_inline_result",
        "callback_query",
        "edited_message",
        "channel_post",
        "edited_channel_post",
        "shipping_query",
        "pre_checkout_query",
        "poll",
        "poll_answer"
      ],
      "genericArguments": null,
      "properties": null
    },
    "Nikia.TelegramBotManager.BotManager.BotDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "IsActive",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "Token",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CheckMembership",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "MembershipTargetId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ServerPathId",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "TenantId",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.FullAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.AuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "IsDeleted",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "DeleterId",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "DeletionTime",
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.AuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.CreationAuditedEntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "LastModificationTime",
          "type": "System.DateTime?",
          "typeSimple": "string?",
          "isRequired": false
        },
        {
          "name": "LastModifierId",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.CreationAuditedEntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<TPrimaryKey>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TPrimaryKey"
      ],
      "properties": [
        {
          "name": "CreationTime",
          "type": "System.DateTime",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "CreatorId",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.EntityDto<T0>": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": [
        "TKey"
      ],
      "properties": [
        {
          "name": "Id",
          "type": "TKey",
          "typeSimple": "TKey",
          "isRequired": false
        }
      ]
    },
    "Volo.Abp.Application.Dtos.EntityDto": {
      "baseType": null,
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": []
    },
    "Nikia.TelegramBotManager.BotManager.FileDto": {
      "baseType": "Volo.Abp.Application.Dtos.FullAuditedEntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BotId",
          "type": "System.Guid",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "BotName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Code",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FileUrl",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "ShareUrl",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "FileType",
          "type": "Nikia.TelegramBotManager.BotManager.FileType",
          "typeSimple": "Nikia.TelegramBotManager.BotManager.FileType",
          "isRequired": false
        },
        {
          "name": "TenantId",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Nikia.TelegramBotManager.BotManager.FileType": {
      "baseType": "System.Enum",
      "isEnum": true,
      "enumNames": [
        "Audio",
        "Video",
        "Document",
        "Image"
      ],
      "enumValues": [
        0,
        1,
        2,
        3
      ],
      "genericArguments": null,
      "properties": null
    },
    "Nikia.TelegramBotManager.BotManager.FileResultRequestDto": {
      "baseType": "Volo.Abp.Application.Dtos.PagedAndSortedResultRequestDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BotId",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Nikia.TelegramBotManager.BotManager.BotStatusReportDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto<System.Guid>",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "BotName",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "BotIsActive",
          "type": "System.Boolean",
          "typeSimple": "boolean",
          "isRequired": false
        },
        {
          "name": "TotalFileCount",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "TotalBotUserCount",
          "type": "System.Int32",
          "typeSimple": "number",
          "isRequired": false
        },
        {
          "name": "TenantId",
          "type": "System.Guid?",
          "typeSimple": "string?",
          "isRequired": false
        }
      ]
    },
    "Nikia.TelegramBotManager.BotManager.ReportDto": {
      "baseType": "Volo.Abp.Application.Dtos.EntityDto",
      "isEnum": false,
      "enumNames": null,
      "enumValues": null,
      "genericArguments": null,
      "properties": [
        {
          "name": "Name",
          "type": "System.String",
          "typeSimple": "string",
          "isRequired": false
        },
        {
          "name": "Value",
          "type": "System.Int64",
          "typeSimple": "number",
          "isRequired": false
        }
      ]
    }
  }
}